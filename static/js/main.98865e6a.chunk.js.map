{"version":3,"sources":["store/slices/userSlice.js","store/slices/postsSlice.js","store/index.js","hooks/useAuth.js","pages/HomePage.jsx","components/Form.jsx","components/Login.jsx","pages/LoginPage.jsx","components/SignUp.jsx","pages/RegisterPage.jsx","pages/Aboutpage.jsx","components/BlogFilter.jsx","components/PostItem.jsx","components/PostList.jsx","pages/Blogpage.jsx","pages/Createpost.jsx","pages/Editpost.jsx","pages/Singlepage.jsx","pages/Notfoundpage.jsx","components/Footer.jsx","components/Header.jsx","components/Layout.jsx","hoc/RequireAuth.jsx","App.js","firebase.js","index.js"],"names":["userSlice","createSlice","name","initialState","email","token","id","reducers","setUser","state","action","payload","removeUser","actions","fetchPosts","createAsyncThunk","_","a","rejectWithValue","fetch","response","ok","Error","json","data","message","deletePost","dispatch","method","removePost","toggleStatus","getState","todo","todos","find","headers","body","JSON","stringify","completed","toggleComplete","setError","text","title","userId","addPost","status","error","postsSlice","posts","push","toggledPost","post","filter","extraReducers","pending","fulfilled","rejected","store","configureStore","reducer","user","userReducer","postsReducer","useAuth","useSelector","isAuth","HomePage","navigate","useNavigate","useDispatch","onClick","replace","to","Form","handleClick","useState","setEmail","pass","setPass","TextField","label","variant","type","value","onChange","e","target","sx","mb","mt","ml","Button","Login","password","auth","getAuth","signInWithEmailAndPassword","then","console","log","localStorage","setItem","accessToken","uid","catch","alert","LoginPage","SignUp","createUserWithEmailAndPassword","RegisterPage","About","BlogFilter","postQuery","latest","setSearchParams","search","setSearch","checked","setChecked","handleSubmit","preventDefault","query","isLatest","params","length","autoComplete","onSubmit","width","FormControlLabel","control","Checkbox","PostItem","Grid","item","xs","md","Card","height","minWidth","display","justifyContent","flexDirection","CardContent","Typography","component","color","CardActions","PostList","startsFrom","container","spacing","includes","map","Blogpage","useSearchParams","searchParams","get","has","useEffect","style","margin","Createpost","Editpost","useParams","Singlepage","setPost","res","Notfoundpage","Footer","position","bottom","left","paddingBottom","Header","AppBar","Toolbar","mr","my","Layout","Container","RequireAuth","children","location","useLocation","from","App","path","element","index","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.98865e6a.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    email: null,\n    token: null,\n    id: null,\n};\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser(state, action) {\n            state.email = action.payload.email;\n            state.token = action.payload.token;\n            state.id = action.payload.id;\n        },\n        removeUser(state) {\n            state.email = null;\n            state.token = null;\n            state.id = null;\n        },\n    },\n});\n\nexport const {setUser, removeUser} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchPosts = createAsyncThunk(\r\n    'todos/fetchPosts',\r\n    async function(_, {rejectWithValue}) {\r\n        try {\r\n            const response = await  fetch('https://jsonplaceholder.typicode.com/posts');\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Server Error!');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const deletePost = createAsyncThunk(\r\n    'todos/deletePost',\r\n    async function(id, {rejectWithValue, dispatch}) {\r\n        try {\r\n            const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\r\n                method: 'DELETE',\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Can\\'t delete task. Server error.');\r\n            }\r\n\r\n            dispatch(removePost({id}));\r\n\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const toggleStatus = createAsyncThunk(\r\n    'todos/toggleStatus',\r\n    async function (id, {rejectWithValue, dispatch, getState}) {\r\n        const todo = getState().todos.todos.find(todo => todo.id === id);\r\n\r\n        try {\r\n            const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    completed: !todo.completed,\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Can\\'t toggle status. Server error.');\r\n            }\r\n\r\n            dispatch(toggleComplete({id}));\r\n\r\n        } catch (error) {\r\n            return rejectWithValue(error.message)\r\n        }\r\n    }\r\n);\r\n\r\nexport const addNewPost = createAsyncThunk(\r\n    'todos/addNewPost',\r\n    async function (text, {rejectWithValue, dispatch}) {\r\n        try {\r\n            const todo = {\r\n                title: text,\r\n                userId: 1,\r\n                completed: false,\r\n            };\r\n\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(todo)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Can\\'t add task. Server error.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            dispatch(addPost(data));\r\n\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst setError = (state, action) => {\r\n    state.status = 'rejected';\r\n    state.error = action.payload;\r\n}\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState: {\r\n        posts: [],\r\n        status: null,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        addPost(state, action) {\r\n            state.posts.push(action.payload);\r\n        },\r\n        toggleComplete(state, action) {\r\n            const toggledPost = state.posts.find(post => post.id === action.payload.id);\r\n            toggledPost.completed = !toggledPost.completed;\r\n        },\r\n        removePost(state, action) {\r\n            state.posts = state.posts.filter(post => post.id !== action.payload.id);\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchPosts.pending]: (state) => {\r\n            state.status = 'loading';\r\n            state.error = null;\r\n        },\r\n        [fetchPosts.fulfilled]: (state, action) => {\r\n            state.status = 'resolved';\r\n            state.posts = action.payload;\r\n        },\r\n        [fetchPosts.rejected]: setError,\r\n        [deletePost.rejected]: setError,\r\n        [toggleStatus.rejected]: setError,\r\n    },\r\n});\r\n\r\nconst {addPost, toggleComplete, removePost} = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;","import {configureStore} from '@reduxjs/toolkit';\nimport userReducer from './slices/userSlice';\nimport postsReducer from './slices/postsSlice';\n\nexport const store = configureStore({\n    reducer: {\n        user: userReducer,\n        posts: postsReducer,\n    }\n});","import {useSelector} from 'react-redux';\n\nexport function useAuth() {\n    const {email, token, id} = useSelector(state => state.user);\n\n    return {\n        isAuth: !!email,\n        email,\n        token,\n        id,\n    };\n}","import {Navigate, useNavigate} from 'react-router-dom';\nimport {useDispatch} from 'react-redux'\nimport { useAuth } from 'hooks/useAuth';\nimport {removeUser} from 'store/slices/userSlice'\n\nconst HomePage = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const {isAuth, email} = useAuth();\n\n    return isAuth ? (\n        <div>\n            <h1>Welcome</h1>\n\n            <button\n                onClick={()=> { dispatch(removeUser()); navigate('/', { replace: true }); }}\n            >Log out from {email}</button>\n        </div>\n    ) : (\n        <Navigate to=\"/login\" />\n    )\n}\n\nexport default HomePage;","import { Button, TextField } from '@mui/material';\nimport { useState } from 'react';\n\nconst Form = ({ title, handleClick }) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n\n    return (\n        <div>\n            <TextField\n                label='email'\n                variant=\"standard\"\n                type='email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                sx={{\n                    mb: \"1.5rem\",\n                    mt: \"10px\",\n                    ml: \"10px\"\n                }}\n            />\n            <TextField\n                label='password'\n                variant=\"standard\"\n\n                type='password'\n                value={pass}\n                onChange={(e) => setPass(e.target.value)}\n                sx={{\n                    mb: \"1.5rem\",\n                    mt: \"10px\",\n                    ml: \"10px\"\n                }}\n            />\n            <Button variant=\"contained\" onClick={() => handleClick(email, pass)} sx={{\n                mt: \"15px\",\n                ml: \"10px\"\n            }}> {title}</Button>\n        </div>\n    )\n}\n\nexport default Form;\n","import {useDispatch} from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\n\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport Form from 'components/Form';\nimport {setUser} from 'store/slices/userSlice';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const handleLogin = (email, password) => {\n        const auth = getAuth();\n        signInWithEmailAndPassword(auth, email, password)\n            .then(({user}) => {\n                console.log(user);\n                localStorage.setItem(\"jwt\", user.accessToken)\n                dispatch(setUser({\n                    email: user.email,\n                    id: user.uid,\n                    token: user.accessToken,\n                }));\n                navigate('/');\n            })\n            .catch(() => alert('Invalid user!'))\n    }\n\n    return (\n        <Form\n            title=\"sign in\"\n            handleClick={handleLogin}\n        />\n    )\n}\n\nexport default Login;\n","import  Login  from 'components/Login';\nimport { Link } from 'react-router-dom';\n\nconst LoginPage = () => {\n    return (\n        <div>\n            <h1>Login</h1>\n            <Login />\n            <p>\n                Or <Link to=\"/register\">register</Link>\n            </p>\n          \n            <p>Login: test@test.com password: 123456</p>\n        </div>\n    )\n}\n\nexport default LoginPage","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport Form from 'components/Form';\nimport { setUser } from 'store/slices/userSlice';\nimport { Box } from '@mui/system';\n\nconst SignUp = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const handleRegister = (email, password) => {\n        const auth = getAuth();\n        console.log(auth);\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(({ user }) => {\n                console.log(user);\n                localStorage.setItem(\"jwt\", user.accessToken)\n                dispatch(setUser({\n                    email: user.email,\n                    id: user.uid,\n                    token: user.accessToken,\n                }));\n                navigate('/');\n            })\n            .catch(console.error)\n    }\n\n    return (\n\n        <Form\n            title=\"register\"\n            handleClick={handleRegister}\n        />\n\n    )\n}\n\nexport default SignUp","import  SignUp  from 'components/SignUp';\nimport { Link } from 'react-router-dom';\n\nconst RegisterPage = () => {\n    return (\n        <div>\n            <h1>Register</h1>\n            <SignUp />\n            <p>\n                Already have an account? <Link to=\"/login\">Sign in</Link>   \n            </p>      \n        </div>\n    )\n}\n\nexport default RegisterPage;\n","import { Outlet, Link } from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div>\n            <h1>About us</h1>\n            <p>This is a demo website.</p>\n            <ul>\n                <li><Link to=\"contacts\">Our Contacts</Link></li>\n                <li><Link to=\"team\">Our Team</Link></li>\n            </ul>\n\n            {/* <Routes>\n                <Route path=\"contacts\" element={<p>Our contact</p>} />\n                <Route path=\"team\" element={<p>Our team</p>} />\n            </Routes> */}\n            <Outlet />\n        </div>\n    )\n}\n\nexport default About;\n","import { Button, Checkbox, FormControlLabel, TextField } from '@mui/material';\nimport { useState } from 'react';\n\nconst BlogFilter = ({ postQuery, latest, setSearchParams }) => {\n    const [search, setSearch] = useState(postQuery);\n    const [checked, setChecked] = useState(latest);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const query = search;\n        const isLatest = checked;\n        const params = {};\n\n        if (query.length) params.post = query;\n        if (isLatest) params.latest = true;\n\n        setSearchParams(params);\n    }\n\n    return (\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <TextField\n                label='search'\n                variant=\"standard\"\n\n                type='search'\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n                sx={{\n                  \n                    width: \"90%\"\n\n                }}\n            />\n            <Button variant=\"contained\" onClick={handleSubmit} sx={{\n                mt: \"10px\",\n                ml: \"10px\"\n            }}>Search</Button>\n            <FormControlLabel control={<Checkbox checked={checked} onChange={e => setChecked(e.target.checked)} />} label=\"New only\" />\n        </form>\n    );\n};\n\nexport default BlogFilter;\n\n// <form autoComplete=\"off\" onSubmit={handleSubmit}>\n// <Box\n//     sx={{\n//         width: 500,\n//         maxWidth: '100%',\n//     }}\n// >\n//     <TextField fullWidth label=\"Search\" id=\"fullWidth\" value={search} onInput={e => setSearch(e.target.value)} />\n\n//     <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\n//         <FormControlLabel control={<Checkbox checked={checked} onInput={e => setChecked(e.target.checked)} />} label=\"New only\" />\n//     </FormGroup>\n// </Box>\n// <input type=\"submit\" value=\"Search\" />\n// </form>","import { Button, Card, CardActions, CardContent, Grid, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PostItem = ({ post }) => {\r\n    return (\r\n        <Grid item xs={12} md={4}>\r\n            <Card\r\n                sx={{\r\n                    height: '100%',\r\n                    minWidth: 275,\r\n                    display:'flex', \r\n                    justifyContent: \"space-between\", \r\n                    flexDirection:'column'\r\n                }}\r\n            >\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"h3\"\r\n                    >\r\n                        Id {post.id}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {post.title}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Link to={`/posts/${post.id}`}>\r\n                        <Button >\r\n                            Открыть\r\n                        </Button>\r\n                    </Link>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PostItem;\r\n","import { Grid } from '@mui/material'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport PostItem from './PostItem'\r\n\r\nconst PostList = ({postQuery, startsFrom}) => {\r\n    const posts = useSelector(state => state.posts.posts);\r\n    console.log(posts);\r\n    return (   \r\n        <Grid container spacing={2}>\r\n            {posts.filter(\r\n                post => post.title.includes(postQuery) && post.id >= startsFrom\r\n            ).map(post => (\r\n                <PostItem key={post.id} post={post}/>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BlogFilter from 'components/BlogFilter';\nimport PostList from 'components/PostList';\nimport { Button } from '@mui/material';\nimport { fetchPosts } from 'store/slices/postsSlice';\n\nconst Blogpage = () => {\n    const dispatch = useDispatch();\n    const { posts, status, error } = useSelector(state => state.posts);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const postQuery = searchParams.get('post') || '';\n    const latest = searchParams.has('latest');\n\n    const startsFrom = latest ? 80 : 1;\n\n    useEffect(() => {\n        dispatch(fetchPosts())\n    }, [dispatch]);\n\n    return (\n        <div>\n            <h1>Our news</h1>\n            <BlogFilter postQuery={postQuery} latest={latest} setSearchParams={setSearchParams} />\n            <Link to=\"/posts/new\" style={{ margin: '1rem 0', display: 'inline-block' }}>\n                <Button color=\"inherit\" >\n                    Add new post\n                </Button>\n            </Link>\n            {status === 'loading' && <h2>Loading...</h2>}\n            {error && <h2>An error occured: {error}</h2>}\n            {posts && <PostList postQuery={postQuery} startsFrom={startsFrom} />}\n        </div>\n    )\n}\n\nexport default Blogpage;\n","import { useNavigate } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\nimport { removeUser } from 'store/slices/userSlice'\n\nconst Createpost = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    return (\n        <div>\n            <h1>Create a post</h1>\n            {/* <button onClick={() => { dispatch(removeUser()); navigate('/', { replace: true }); }}>Log Out</button> */}\n        </div>\n    )\n}\n\nexport default Createpost;\n","import { useParams } from 'react-router-dom'\n\nconst Editpost = () => {\n    const {id} = useParams();\n\n    return (\n        <div>\n            <h1>Edit post {id}</h1>\n        </div>\n    )\n}\n\nexport default Editpost;\n","import { useParams, Link, useNavigate } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nconst Singlepage = () => {\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const [post, setPost] = useState(null);\n\n    const goBack = () => navigate(-1);\n    const goHome = () => navigate('/', {replace: true});\n\n    useEffect(() => {\n        fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n            .then(res => res.json())\n            .then(data => setPost(data))\n    }, [id]);\n\n    return (\n        <div>\n            <button onClick={goBack}>Go back</button>\n            {/* Bad approach */}\n            <button onClick={goHome}>Go home</button>\n            {post && (\n                <>\n                    <h1>{post.title}</h1>\n                    <p>{post.body}</p>\n                    <Link to={`/posts/${id}/edit`}>Edit this post</Link>\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default Singlepage;\n","import { Link } from 'react-router-dom'\n\nconst Notfoundpage = () => {\n    return (\n        <div>\n            This page doesn't exist. Go <Link to=\"/\">home</Link>\n        </div>\n    )\n}\n\nexport default Notfoundpage;\n","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div style={{\r\n            position: \"fixed\",\r\n            bottom: 0,\r\n            left: 850,\r\n            paddingBottom: 10,\r\n        }}>\r\n            <Typography>Footer &copy;2021</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { AppBar, Button, Toolbar, Typography } from '@mui/material';\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    component=\"span\"\r\n                    sx={{ mr: \"30px\" }}\r\n                >\r\n                    Logo\r\n                </Typography>\r\n                <Button  onClick={() => navigate(\"/\")} sx={{ my: 2, color: 'white', display: 'block' }}> Home </Button>\r\n                <Button  onClick={() => navigate(\"/posts\")} sx={{ my: 2, color: 'white', display: 'block' }}> Blog </Button>\r\n                <Button  onClick={() => navigate(\"/about\")} sx={{ my: 2, color: 'white', display: 'block' }}> About </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import { Container } from '@mui/material';\nimport { Outlet } from 'react-router-dom';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Layout = () => {\n    return (\n        <>\n            <Header />\n\n            <Container\n                sx={{\n                    mt: '5rem',\n                    // display: 'flex',\n                    // justifyContent: 'center',\n                }}\n            >\n                <Outlet />\n            </Container>\n\n            <Footer />\n        </>\n    )\n}\n\nexport default Layout;\n","import { useLocation, Navigate } from 'react-router-dom';\nimport {useAuth} from 'hooks/useAuth'\n\nconst RequireAuth = ({children}) => {\n    const location = useLocation();\n    const {isAuth} = useAuth();\n\n    if (!isAuth) {\n        return <Navigate to='/login' state={{from: location}} />\n    }\n\n  return children;\n}\n\nexport default RequireAuth;\n","import HomePage from \"pages/HomePage\";\nimport LoginPage from \"pages/LoginPage\";\nimport RegisterPage from \"pages/RegisterPage\";\nimport About from \"pages/Aboutpage\";\nimport Blogpage from \"pages/Blogpage\";\nimport Createpost from \"pages/Createpost\";\nimport Editpost from \"pages/Editpost\";\nimport Singlepage from \"pages/Singlepage\";\nimport Notfoundpage from \"pages/Notfoundpage\";\n\nimport Layout from \"components/Layout\";\nimport React from \"react\";\nimport RequireAuth from \"hoc/RequireAuth\";\nimport { setUser } from \"store/slices/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { getAuth, signInWithCustomToken } from \"firebase/auth\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\nfunction App() {\n  //что мне с токеном то делать, почему его гугл не принимает\n    // const dispatch = useDispatch();\n    // React.useEffect(() => {\n    //     if (localStorage.getItem(\"jwt\")) {\n    //         const auth = getAuth();\n    //         let token = localStorage.getItem(\"jwt\");\n    //         console.log(token);\n         \n    //         signInWithCustomToken(auth, token)\n    //             .then((userCredential) => {\n    //                 // Signed in\n    //                 const user = userCredential.user;\n                  \n    //                 dispatch(\n    //                     setUser({\n    //                         email: user.email,\n    //                         id: user.uid,\n    //                         token: user.accessToken,\n    //                     })\n    //                 );\n    //                 // ...\n    //             })\n    //             .catch((error) => {\n    //                 const errorCode = error.code;\n    //                 const errorMessage = error.message;\n    //                 // ...\n    //             })\n    //    }\n    // }, [] );\n    \n    \n    return (\n        <Routes>\n            <Route path=\"/\" element={<Layout />}>\n                <Route index element={<HomePage />} />\n                <Route path=\"about\" element={<About />}>\n                    <Route path=\"contacts\" element={<p>Our contact</p>} />\n                    <Route path=\"team\" element={<p>Our team</p>} />\n                </Route>\n                <Route\n                    path=\"about-us\"\n                    element={<Navigate to=\"/about\" replace />}\n                />\n                <Route path=\"posts\" element={<Blogpage />} />\n                <Route path=\"posts/:id\" element={<Singlepage />} />\n                <Route path=\"posts/:id/edit\" element={<Editpost />} />\n                <Route\n                    path=\"posts/new\"\n                    element={\n                        <RequireAuth>\n                            <Createpost />\n                        </RequireAuth>\n                    }\n                />\n                <Route path=\"login\" element={<LoginPage />} />\n                <Route path=\"register\" element={<RegisterPage />} />\n                <Route path=\"*\" element={<Notfoundpage />} />\n            </Route>\n        </Routes>\n    );\n}\n\nexport default App;\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from 'store';\nimport App from './App';\nimport './index.css';\nimport './firebase';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/react-blog-MUI'>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}